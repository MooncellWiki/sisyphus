package web

import (
	"context"
	"github.com/MooncellWiki/sisyphus"
	"html/template"
)

var indexJSPath = func() string {
	entries, err := Static.ReadDir("static/assets")
	if err != nil {
		return ""
	}
	for _, entry := range entries {
		if entry.IsDir() {
			continue
		}
		name := entry.Name()
		if name[:5] == "index" && name[len(name)-3:] == ".js" {
			return sisyphus.StaticPath + "static/assets/" + name
		}
	}
	return ""
}()

var goTemplate = template.Must(template.New("example").Parse(func() string {
	data, err := Static.ReadFile("static/index.html")
	if err != nil {
		panic(err)
	}
	return string(data)
}()))

templ injected(challenge any) {
	@templ.JSONScript("sisyphus_version", sisyphus.Version)
	if challenge != nil {
		@templ.JSONScript("sisyphus_challenge", challenge)
	}
	@templ.JSONScript("sisyphus_base_prefix", sisyphus.BasePrefix)
}

templ base(title string, body templ.Component, challenge any, ogTags map[string]string) {
	@templ.FromGoHTML(goTemplate, struct {
		Title string
		Head  template.HTML
		Body  template.HTML
	}{
		Title: title,
		Head: func() template.HTML {
			var head = injected(challenge)
			result, err := templ.ToGoHTML(context.Background(), head)
			if err != nil {
				panic(err)
			}
			return result
		}(),
		Body: func() template.HTML {
			result, err := templ.ToGoHTML(context.Background(), body)
			if err != nil {
				panic(err)
			}
			return result
		}(),
	})
}

templ index() {
	<div class="centered-div">
		<p id="status">Loading...</p>
		<script async type="module" src={ sisyphus.BasePrefix + indexJSPath + "?cacheBuster=" + sisyphus.Version }></script>
		<div id="progress" role="progressbar" aria-labelledby="status">
			<div class="bar-inner"></div>
		</div>
		<details class="prose">
			<summary>Why am I seeing this?</summary>
			<p>
				You are seeing this because the administrator of this website has set up <a
	href="https://github.com/MooncellWiki/sisyphus"
>sisyphus</a> to protect the server against the scourge of
				<a href="https://thelibre.news/foss-infrastructure-is-under-attack-by-ai-companies/">
					AI companies
					aggressively scraping websites
				</a>. This can and does cause downtime for the websites, which makes their
				resources inaccessible for everyone.
			</p>
			<p>
				sisyphus is a compromise. sisyphus uses a <a
	href="https://sisyphus.techaro.lol/docs/design/why-proof-of-work"
>Proof-of-Work</a>
				scheme in the vein of <a href="https://en.wikipedia.org/wiki/Hashcash">Hashcash</a>, a proposed
				proof-of-work scheme for reducing email spam. The idea is that at individual scales the additional load is
				ignorable, but at mass scraper levels it adds up and makes scraping much more expensive.
			</p>
			<p>
				Ultimately, this is a hack whose real purpose is to give a "good enough" placeholder solution so that more
				time can be spent on fingerprinting and identifying headless browsers (EG: via how they do font rendering)
				so that the challenge proof of work page doesn't need to be presented to users that are much more likely to
				be legitimate.
			</p>
			<p>
				Please note that sisyphus requires the use of modern JavaScript features that plugins like <a
	href="https://jshelter.org/"
>JShelter</a> will disable. Please disable JShelter or other such
				plugins for this domain.
			</p>
		</details>
		<noscript>
			<p>
				Sadly, you must enable JavaScript to get past this challenge. This is required because AI companies have
				changed
				the social contract around how website hosting works. A no-JS solution is a work-in-progress.
			</p>
		</noscript>
		<div id="testarea"></div>
	</div>
}

templ errorPage(message string, mail string) {
	<div class="centered-div">
		<p>{ message }.</p>
		<button onClick="window.location.reload();">Try again</button>
		if mail != "" {
			<p>
				<a href="/">Go home</a> or if you believe you should not be blocked, please contact the webmaster at
				<a href={ "mailto:" + templ.SafeURL(mail) }>
					{ mail }
				</a>
			</p>
		} else {
			<p><a href="/">Go home</a></p>
		}
	</div>
}

templ StaticHappy() {
	<div class="centered-div">
		<p>This is just a check endpoint for your reverse proxy to use.</p>
	</div>
}

templ bench() {
	<div style="height:20rem;display:flex">
		<table style="margin-top:1rem;display:grid;grid-template:auto 1fr/auto auto;gap:0 0.5rem">
			<thead
				style="border-bottom:1px solid black;padding:0.25rem 0;display:grid;grid-template:1fr/subgrid;grid-column:1/-1"
			>
				<tr id="table-header" style="display:contents">
					<th style="width:4.5rem">Time</th>
					<th style="width:4rem">Iters</th>
				</tr>
				<tr id="table-header-compare" style="display:none">
					<th style="width:4.5rem">Time A</th>
					<th style="width:4rem">Iters A</th>
					<th style="width:4.5rem">Time B</th>
					<th style="width:4rem">Iters B</th>
				</tr>
			</thead>
			<tbody
				id="results"
				style="padding-top:0.25rem;display:grid;grid-template-columns:subgrid;grid-auto-rows:min-content;grid-column:1/-1;row-gap:0.25rem;overflow-y:auto;font-variant-numeric:tabular-nums"
			></tbody>
		</table>
		<div class="centered-div">
			<p id="status" style="max-width:256px">Loading...</p>
			<script async type="module" src={ sisyphus.BasePrefix + "/.within.website/x/cmd/sisyphus/static/js/bench.mjs?cacheBuster=" + sisyphus.Version }></script>
			<div id="sparkline"></div>
			<noscript>
				<p>Running the benchmark tool requires JavaScript to be enabled.</p>
			</noscript>
		</div>
	</div>
	<form id="controls" style="position:fixed;top:0.5rem;right:0.5rem">
		<div style="display:flex;justify-content:end">
			<label for="difficulty-input" style="margin-right:0.5rem">Difficulty:</label>
			<input id="difficulty-input" type="number" name="difficulty" style="width:3rem"/>
		</div>
		<div style="margin-top:0.25rem;display:flex;justify-content:end">
			<label for="algorithm-select" style="margin-right:0.5rem">Algorithm:</label>
			<select id="algorithm-select" name="algorithm"></select>
		</div>
		<div style="margin-top:0.25rem;display:flex;justify-content:end">
			<label for="compare-select" style="margin-right:0.5rem">Compare:</label>
			<select id="compare-select" name="compare">
				<option value="NONE">-</option>
			</select>
		</div>
	</form>
}
